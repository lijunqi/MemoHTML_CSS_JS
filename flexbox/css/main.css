/* Your code goes here */

.container {
    display: flex;

    /* Defines the direction items are placed in the container,
    and accepts the following values:
        row: Items are placed the same as the text direction.
        row-reverse: Items are placed opposite to the text direction.
        column: Items are placed top to bottom.
        column-reverse: Items are placed bottom to top.

    flex-direction: row;


    flex-wrap: wrap-reverse;
    */
    flex-flow: row wrap; /* combine flex-direction and flex-wrap */

    /* Aligns items horizontally (main axis) and accepts the following values:
        flex-start,
        flex-end,
        center,
        space-between,
        space-around
    */
    justify-content: flex-start;


    /* Align items along cross axis when have multiple rows
    */
    align-content: space-around;


    /* Aligns items vertically (cross axis) and accepts the following values:
        stretch   : Items are stretched to fit the container.
        flex-start: Items align to the top of the container.
        flex-end  : Items align to the bottom of the container.
        center    : Items align at the vertical center of the container.
        baseline  : Items display at the baseline of the container.
    */
    align-items: flex-start;


    /*
    float: right;
    width: 100%;
    */
    height: 300px;
    width: 500px;
    border: 1px solid #fff;
}

.container div:nth-child(2) {
    order: 1;
}


/* flex-grow
The container is 800px wide, and has four children that have been given a width of 100px.
That leaves 400px of empty extra space in the container, to be distributed to children that can grow.

If two of the four children have flex-grow set to 1, and the other two have it set to 3,
the total of flex-grow values among the children is 8 (3 + 3 + 1 + 1).

Divide the 400px of empty space by 8, and you get 50 - so each child gets
(50 multiplied by its flex-grow value) pixels added to its width.
*/